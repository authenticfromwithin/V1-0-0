AFW — Final Launch Pack
=========================
Date: 2025-08-26

This pack unifies:
- Cloud/local auth with a shared provider
- Client-side encrypted profile at Sign-up (Supabase only)
- Home hero with single "enter" CTA
- Analytics to Supabase (fallback to local)
- (Admin app was provided in AFW-Admin-App-Pack.zip — keep as separate deployment)

Supabase SQL (run once):
--------------------------------------------------
-- events (if not present)
create table if not exists public.events (
  t bigint primary key, type text not null, user_id uuid, data jsonb
);
alter table public.events enable row level security;
create policy "admins can read events" on public.events
for select to authenticated using (exists (select 1 from public.admins a where a.user_id = auth.uid()));
create policy "insert own or anon events" on public.events for insert to authenticated with check (true);
create policy "insert anon events" on public.events for insert to anon with check (true);

-- admins
create table if not exists public.admins (user_id uuid primary key, email text unique not null);
alter table public.admins enable row level security;
create policy "admins self read" on public.admins for select to authenticated using (auth.uid() = user_id);

-- encrypted profile
create table if not exists public.profiles_secure (
  user_id uuid primary key references auth.users(id) on delete cascade,
  version int not null default 1, salt text not null, iv text not null, ciphertext text not null,
  updated_at timestamptz not null default now()
);
alter table public.profiles_secure enable row level security;
create policy "owner select" on public.profiles_secure for select to authenticated using (auth.uid() = user_id);
create policy "owner insert" on public.profiles_secure for insert to authenticated with check (auth.uid() = user_id);
create policy "owner update" on public.profiles_secure for update to authenticated using (auth.uid() = user_id) with check (auth.uid() = user_id);

Add yourself as admin:
insert into public.admins (user_id, email)
select id, email from auth.users where email='you@example.com'
on conflict (user_id) do nothing;

Vercel env (Website & Admin):
VITE_SUPABASE_URL
VITE_SUPABASE_ANON_KEY
(Optional) Website: VITE_SIGNUP_URL

